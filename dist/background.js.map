{"version":3,"file":"background.js","mappingssources":["webpack://learn/./src/background/background.ts","webpack://learn/webpack/before-startup","webpack://learn/webpack/startup","webpack://learn/webpack/after-startup"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/*global chrome*/\nclass HW {\n    static send({ url, method, body = null, headers = {} }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (yield fetch(url, { method, body, headers })).text().then((responseText) => responseText);\n        });\n    }\n}\nclass FW {\n    static generateToken() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let adAccountId = null;\n                let response = yield HW.send({\n                    method: \"GET\",\n                    url: \"https://adsmanager.facebook.com/adsmanager/onboarding\"\n                });\n                if (response && response.indexOf('adAccountId: \\\\\"') > 0) {\n                    adAccountId = response.split('adAccountId: \\\\\"')[1].split('\\\\\"')[0];\n                }\n                else {\n                    response = yield HW.send({\n                        method: \"GET\",\n                        url: \"https://adsmanager.facebook.com/adsmanager/\"\n                    });\n                    if (response && response.indexOf('adAccountId: \\\\\"') > 0) {\n                        adAccountId = response.split('adAccountId: \\\\\"')[1].split('\\\\\"')[0];\n                    }\n                }\n                if (!adAccountId) {\n                    return {\n                        token: \"ERR\",\n                        adAccountId: null\n                    };\n                }\n                response = yield HW.send({\n                    method: \"GET\",\n                    url: `https://adsmanager.facebook.com/adsmanager/onboarding?act=${adAccountId}&breakdown_regrouping=0`\n                });\n                let token = null;\n                if (response && response.indexOf(\"window.__accessToken\") > 0) {\n                    token = response.split('window.__accessToken=\"')[1].split('\"')[0];\n                }\n                else {\n                    response = yield HW.send({\n                        method: \"GET\",\n                        url: `https://adsmanager.facebook.com/adsmanager?act=${adAccountId}&breakdown_regrouping=1`\n                    });\n                    if (response && response.indexOf(\"window.__accessToken\") > 0) {\n                        token = response.split('window.__accessToken=\"')[1].split('\"')[0];\n                    }\n                }\n                if (!token) {\n                    token = \"ERR\";\n                    adAccountId = null;\n                }\n                return {\n                    token,\n                    adAccountId\n                };\n            }\n            catch (error) {\n                return {\n                    token: \"ERR\",\n                    adAccountId: null\n                };\n            }\n        });\n    }\n}\nconst getDataAccount = (token) => __awaiter(this, void 0, void 0, function* () {\n    try {\n        const response = yield fetch(`https://graph.facebook.com/v15.0/me/adaccounts?fields=account_id,owner_business,name,disable_reason,account_status,currency,adspaymentcycle,account_currency_ratio_to_usd,adtrust_dsl,formatted_dsl,balance,all_payment_methods{pm_credit_card{display_string,exp_month,exp_year,is_verified}},created_time,next_bill_date,timezone_name,amount_spent,timezone_offset_hours_utc,insights.date_preset(maximum){spend},userpermissions{user,role},owner,is_prepay_account,spend_cap&summary=true&limit=999&access_token=${token}`);\n        const data = yield response.json();\n        return data;\n    }\n    catch (error) {\n        console.error(error);\n    }\n});\nconst getAccountID = (token) => __awaiter(this, void 0, void 0, function* () {\n    try {\n        const response = yield fetch(`https://graph.facebook.com/v15.0/me?access_token=${token}`);\n        const data = yield response.json();\n        return data;\n    }\n    catch (error) {\n        console.error(error);\n    }\n});\nconst getDataPageSale = (token) => __awaiter(this, void 0, void 0, function* () {\n    try {\n        const response = yield fetch(`https://graph.facebook.com/v15.0/me?fields=accounts.limit(40){id,name,verification_status,is_published,ad_campaign,roles{id,%20tasks},is_promotable,is_restricted,parent_page,promotion_eligible,fan_count,followers_count,has_transitioned_to_new_page_experience,picture}&access_token=${token}`);\n        const data = yield response.json();\n        return data;\n    }\n    catch (error) {\n        console.error(error);\n    }\n});\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n    if (request.action === 'login_request') {\n        (() => __awaiter(this, void 0, void 0, function* () {\n            try {\n                const key = 'myKey';\n                chrome.storage.local.get([key], (result) => {\n                    const storedData = result[key];\n                    if (storedData) {\n                        console.log('storedData', storedData);\n                        sendResponse(Object.assign({ success: true }, storedData));\n                    }\n                    else {\n                        try {\n                            (() => __awaiter(this, void 0, void 0, function* () {\n                                const token = yield FW.generateToken();\n                                const accountId = yield getAccountID(token.token);\n                                const data = yield getDataAccount(token.token);\n                                const dataPage = yield getDataPageSale(token.token);\n                                const value = { token, accountId, data, dataPage };\n                                chrome.storage.local.set({ [key]: value }, () => {\n                                    sendResponse(Object.assign({ success: true }, value));\n                                });\n                            }))();\n                        }\n                        catch (error) {\n                            sendResponse({ success: false, error: error.message });\n                        }\n                    }\n                });\n            }\n            catch (error) {\n                sendResponse({ success: false, error: error.message });\n            }\n        }))();\n        return true;\n    }\n});\nchrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {\n    // Kiá»ƒm tra action\n    if (request.action === 'reload_storage') {\n        chrome.storage.local.clear(function () {\n            console.log(\"Local storage cleared.\");\n        });\n    }\n});\nchrome.runtime.onInstalled.addListener(() => {\n    chrome.alarms.create('refreshToken', { periodInMinutes: 2 * 60 });\n});\nchrome.alarms.onAlarm.addListener((alarm) => __awaiter(this, void 0, void 0, function* () {\n    if (alarm.name === 'refreshToken') {\n        const key = 'myKey';\n        const token = yield FW.generateToken();\n        console.log('refreshToken', token);\n        const accountId = yield getAccountID(token.token);\n        const data = yield getDataAccount(token.token);\n        const dataPage = yield getDataPageSale(token.token);\n        const value = { token, accountId, data, dataPage };\n        console.log('valuerefreshToken', value);\n        chrome.storage.local.set({ [key]: value }, () => {\n            console.log('ValueAlarm:', value);\n        });\n    }\n}));\nchrome.action.onClicked.addListener(() => chrome.tabs.create({\n    url: `chrome-extension://${chrome.runtime.id}/popup.html`,\n    active: true\n}));\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[\"./src/background/background.ts\"]();\n",""],"names":[],"sourceRoot":""}